{"ast":null,"code":"import _createClass from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, switchMap, mergeMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { FamilyActionTypes, ListFamiliesSuccessAction, ListFamiliesFailureAction, AddNewFamilySuccessAction, AddNewFamilyFailureAction, UpdateFamilySuccessAction, UpdateFamilyFailureAction } from './family.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nexport var FamilyEffects = /*#__PURE__*/_createClass(function FamilyEffects(_actions$, _http) {\n  var _this = this;\n\n  _classCallCheck(this, FamilyEffects);\n\n  this._actions$ = _actions$;\n  this._http = _http;\n  this.listFamilies = this._actions$.pipe(ofType(FamilyActionTypes.LIST_FAMILIES), map(function (action) {\n    return action.payload;\n  }), switchMap(function (data) {\n    return _this._http.get('api/family/list').pipe(map(function (r) {\n      return new ListFamiliesSuccessAction(r);\n    }), catchError(function (r) {\n      return of(new ListFamiliesFailureAction(r));\n    }));\n  }));\n  this.addNewFamily = this._actions$.pipe(ofType(FamilyActionTypes.ADD_FAMILY), map(function (action) {\n    return action.payload;\n  }), switchMap(function (data) {\n    return _this._http.post('api/family/new', data).pipe(mergeMap(function (r) {\n      return [new AddNewFamilySuccessAction(r)];\n    }), catchError(function (r) {\n      return of(new AddNewFamilyFailureAction(r));\n    }));\n  }));\n  this.updateFamily$ = this._actions$.pipe(ofType(FamilyActionTypes.UPDATE_FAMILY), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/update?id=' + payload.id, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n  this.setFamilyRole$ = this._actions$.pipe(ofType(FamilyActionTypes.SET_FAMILY_ROLE), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/set-role?id=' + payload.member, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n  this.acceptFamilyMember$ = this._actions$.pipe(ofType(FamilyActionTypes.ACCEPT_MEMBER), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/accept?id=' + payload.member, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n  this.ignoreSuggestedMember$ = this._actions$.pipe(ofType(FamilyActionTypes.IGNORE_MEMBER), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/ignore?id=' + payload.member, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n  this.removeMemberFamily$ = this._actions$.pipe(ofType(FamilyActionTypes.REMOVE_MEMBER), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/remove?id=' + payload.member, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n  this.linkMemberFamily$ = this._actions$.pipe(ofType(FamilyActionTypes.LINK_PERSON_FAMILY), map(function (action) {\n    return action.payload;\n  }), mergeMap(function (payload) {\n    return _this._http.post('api/family/link?id=' + payload.member, payload).pipe(map(function (r) {\n      return new UpdateFamilySuccessAction(r);\n    }), catchError(function (r) {\n      return of(new UpdateFamilyFailureAction(r));\n    }));\n  }));\n});\n\nFamilyEffects.ɵfac = function FamilyEffects_Factory(t) {\n  return new (t || FamilyEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient));\n};\n\nFamilyEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FamilyEffects,\n  factory: FamilyEffects.ɵfac\n});\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"listFamilies\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"addNewFamily\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"updateFamily$\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"setFamilyRole$\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"acceptFamilyMember$\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"ignoreSuggestedMember$\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"removeMemberFamily$\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Object)], FamilyEffects.prototype, \"linkMemberFamily$\", void 0);","map":null,"metadata":{},"sourceType":"module"}
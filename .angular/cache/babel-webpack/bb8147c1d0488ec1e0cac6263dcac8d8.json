{"ast":null,"code":"import _toConsumableArray from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { FamilyActionTypes } from './family.actions';\nimport { MessageType } from '../../common/common.model';\nvar initialState = {\n  families: []\n};\nexport function familyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FamilyActionTypes.UPDATE_FAMILY:\n    case FamilyActionTypes.REMOVE_MEMBER:\n    case FamilyActionTypes.LINK_PERSON_FAMILY:\n    case FamilyActionTypes.ACCEPT_MEMBER:\n    case FamilyActionTypes.IGNORE_MEMBER:\n    case FamilyActionTypes.ADD_FAMILY:\n    case FamilyActionTypes.LIST_FAMILIES:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case FamilyActionTypes.UPDATE_FAMILY_FAILURE:\n    case FamilyActionTypes.ADD_FAMILY_FAILURE:\n    case FamilyActionTypes.LIST_FAMILIES_FAILURE:\n      {\n        var res = action.payload;\n        var message = {\n          type: MessageType.FAILURE,\n          text: res.message\n        };\n        return Object.assign({}, state, {\n          loading: false,\n          loaded: false,\n          message: message\n        });\n      }\n\n    case FamilyActionTypes.UPDATE_FAMILY_SUCCESS:\n      {\n        var family = action.payload;\n        var _message = {\n          type: MessageType.SUCCESS,\n          text: 'Successfully updated family ' + family.name\n        };\n        return {\n          loaded: true,\n          loading: false,\n          message: _message,\n          families: state.families.map(function (f) {\n            return f.id === family.id ? Object.assign({}, f, family) : f;\n          })\n        };\n      }\n\n    case FamilyActionTypes.LIST_FAMILIES_SUCCESS:\n      {\n        var fam = action.payload;\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          families: _toConsumableArray(fam)\n        });\n      }\n\n    case FamilyActionTypes.ADD_FAMILY_SUCCESS:\n      {\n        var _family = action.payload;\n        var _message2 = {\n          type: MessageType.SUCCESS,\n          text: 'Successfully added family ' + _family.name\n        };\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          message: _message2,\n          families: [].concat(_toConsumableArray(state.families), [_family])\n        });\n      }\n\n    case FamilyActionTypes.CLEAR_FAMILY_MESSAGE:\n      return Object.assign({}, state, {\n        message: undefined\n      });\n\n    default:\n      return state;\n  }\n}\nexport var loadedFamilies = function loadedFamilies(state) {\n  return state.loaded;\n};\nexport var loadingFamilies = function loadingFamilies(state) {\n  return state.loading;\n};\nexport var messageFamilies = function messageFamilies(state) {\n  return state.message;\n};\nexport var families = function families(state) {\n  return state.families;\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpEvent, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport var AuthInterceptor = /*#__PURE__*/(function () {\n  var AuthInterceptor = /*#__PURE__*/function () {\n    function AuthInterceptor(_auth) {\n      _classCallCheck(this, AuthInterceptor);\n\n      this._auth = _auth;\n    }\n\n    _createClass(AuthInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(req, next) {\n        var _this = this;\n\n        var token = this._auth.token;\n\n        if (token) {\n          req = req.clone({\n            setHeaders: {\n              Authorization: \"Bearer \".concat(token),\n              ContentType: 'application/json; charset=utf-8'\n            }\n          });\n        } else {\n          req = req.clone({\n            setHeaders: {\n              ContentType: 'application/json; charset=utf-8'\n            }\n          });\n        }\n\n        return next.handle(req).pipe(tap(function (event) {\n          if (event instanceof HttpResponse) {// do stuff with response if you want\n          }\n        }, function (err) {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 401) {\n              _this._auth.collectFailedRequest(req); // console.log(err);\n\n            }\n          }\n        }));\n      }\n    }]);\n\n    return AuthInterceptor;\n  }();\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}
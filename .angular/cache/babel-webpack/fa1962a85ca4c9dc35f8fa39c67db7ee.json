{"ast":null,"code":"import _toConsumableArray from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { TagActionTypes } from './tag.actions';\nimport * as common from '../../common/common.model';\nvar initialState = {\n  tags: [{\n    id: 1,\n    text: 'Member',\n    type: 'status',\n    context: 'person'\n  }, {\n    id: 2,\n    text: 'Visitor',\n    type: 'status',\n    context: 'person'\n  }, {\n    id: 3,\n    text: 'Contact',\n    type: 'status',\n    context: 'person'\n  }]\n};\nexport function tagReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TagActionTypes.UPDATE_TAGS:\n    case TagActionTypes.LIST_TAGS:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case TagActionTypes.UPDATE_TAGS_FAILURE:\n    case TagActionTypes.LIST_TAGS_FAILURE:\n      {\n        var res = action.payload;\n        var message = {\n          type: common.MessageType.FAILURE,\n          text: res.statusText\n        };\n        return Object.assign({}, state, {\n          loading: false,\n          loaded: false,\n          message: message\n        });\n      }\n\n    case TagActionTypes.LIST_TAGS_SUCCESS:\n      {\n        var payload = action.payload;\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          tags: _toConsumableArray(payload)\n        });\n      }\n\n    case TagActionTypes.UPDATE_TAGS_SUCCESS:\n      {\n        var _payload = action.payload;\n        var _message = {\n          type: common.MessageType.SUCCESS,\n          text: 'Successfully updated tags'\n        };\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          message: _message\n          /*tags: state.tags.map((i: Tag[]) => {\n                      return i.uid === interaction.uid ? Object.assign({}, i, interaction) : i;\n                  })*/\n\n        });\n      }\n\n    default:\n      return state;\n  }\n}\nexport var loadedTags = function loadedTags(state) {\n  return state.loaded;\n};\nexport var loadingTags = function loadingTags(state) {\n  return state.loading;\n};\nexport var messageTags = function messageTags(state) {\n  return state.message;\n};\nexport var tags = function tags(state) {\n  return state.tags;\n};","map":null,"metadata":{},"sourceType":"module"}
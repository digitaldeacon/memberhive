{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { forwardRef, SimpleChanges } from '@angular/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatInput } from '@angular/material/input';\nimport { FormControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/flex-layout/flex\";\nimport * as i3 from \"@angular/material/chips\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/core\";\nvar _c0 = [\"chipInput\"];\n\nfunction TagsComponent_mat_chip_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 9);\n    i0.ɵɵlistener(\"remove\", function TagsComponent_mat_chip_5_Template_mat_chip_remove_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r7);\n      var tag_r5 = restoredCtx.$implicit;\n      var ctx_r6 = i0.ɵɵnextContext();\n\n      var _r2 = i0.ɵɵreference(7);\n\n      return ctx_r6.remove(tag_r5, _r2);\n    })(\"keydown.ArrowRight\", function TagsComponent_mat_chip_5_Template_mat_chip_keydown_ArrowRight_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.last && ctx_r8.selectInput($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 10);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tag_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r5.text, \" \");\n  }\n}\n\nfunction TagsComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tag_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tag_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tag_r9.text);\n  }\n}\n\nexport function arrayDiffObj(s, v, key) {\n  var reducedIds = !v ? [] : v.map(function (o) {\n    return o[key];\n  });\n  return !s ? [] : s.filter(function (obj) {\n    return reducedIds.indexOf(obj[key]) === -1;\n  });\n}\nvar CUSTOM_INPUT_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return TagsComponent;\n  }),\n  multi: true\n};\nvar CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return TagsComponent;\n  }),\n  multi: true\n};\nexport var TagsComponent = /*#__PURE__*/(function () {\n  var TagsComponent = /*#__PURE__*/function () {\n    function TagsComponent() {\n      _classCallCheck(this, TagsComponent);\n\n      this.filteredSources = [];\n      this._value = [];\n      this.source = [];\n      this.addNew = true;\n      this.placeholder = '';\n\n      this.onChange = function (_) {// mock\n      };\n\n      this.onTouched = function (_) {// mock\n      };\n    }\n\n    _createClass(TagsComponent, [{\n      key: \"value\",\n      get: function get() {\n        this.filteredSources = arrayDiffObj(this.source, this._value, 'id');\n        return this._value;\n      },\n      set: function set(v) {\n        this.onChange(v);\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(v) {\n        this._value = v; // console.log(v);\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouched = fn;\n      }\n    }, {\n      key: \"validate\",\n      value: function validate(c) {\n        return this._value ? undefined : {\n          tinyError: {\n            valid: false\n          }\n        };\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        if (changes.source && (!this.chipInput || !this.chipInput.value)) {\n          this.filteredSources = arrayDiffObj(this.source, this._value, 'id');\n        }\n      }\n    }, {\n      key: \"textChanged\",\n      value: function textChanged(text) {\n        this.filteredSources = arrayDiffObj(this.source, this._value, 'id').filter(function (obj) {\n          return obj.text.toLowerCase().indexOf(text.toLowerCase()) === 0;\n        });\n      }\n    }, {\n      key: \"add\",\n      value: function add(event) {\n        this._addTag(event.option.value);\n      }\n    }, {\n      key: \"addTextChip\",\n      value: function addTextChip() {\n        var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chipInput;\n\n        if (this.addNew) {\n          if (input.value && !this.autoTrigger.activeOption) {\n            var newId = Math.floor(Math.random() * (100000 - 10000 + 1)) + 10000;\n            var newTag = {\n              id: newId,\n              text: input.value\n            };\n            this.source.push(newTag);\n\n            this._addTag(newTag);\n          }\n        } else {\n          if (this.filteredSources.length) {\n            this._addTag(this.filteredSources[0]);\n          }\n        }\n\n        this.chipInput['nativeElement'].value = '';\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(tag) {\n        this._value = this._value.filter(function (i) {\n          return i !== tag;\n        });\n        this.value = this._value;\n        this.filteredSources = arrayDiffObj(this.source, this._value, 'id');\n        this.chipInput['nativeElement'].blur();\n      }\n    }, {\n      key: \"selectInput\",\n      value: function selectInput(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.textChanged(this.chipInput.value);\n        this.chipInput['nativeElement'].focus();\n        return false;\n      }\n    }, {\n      key: \"displayFn\",\n      value: function displayFn(value) {\n        return value && typeof value === 'object' ? value.text : value;\n      }\n    }, {\n      key: \"_addTag\",\n      value: function _addTag(value) {\n        if (!isNaN(Number(value))) {\n          value = this.source.find(function (tag) {\n            return tag.id === Number(value);\n          });\n        }\n\n        if (!this._value) {\n          this._value = [];\n        }\n\n        if (!value || !value.text || this._value && this._value.indexOf(value) !== -1) {\n          return;\n        }\n\n        this._value.push(value);\n\n        this.value = this._value;\n        this.chipInput.value = '';\n        this.filteredSources = arrayDiffObj(this.source, this._value, 'id');\n        this.chipInput['nativeElement'].blur();\n      }\n    }]);\n\n    return TagsComponent;\n  }();\n\n  TagsComponent.ɵfac = function TagsComponent_Factory(t) {\n    return new (t || TagsComponent)();\n  };\n\n  TagsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TagsComponent,\n    selectors: [[\"mh-tags\"]],\n    viewQuery: function TagsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 7);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chipInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autoTrigger = _t.first);\n      }\n    },\n    inputs: {\n      _value: \"_value\",\n      source: \"source\",\n      addNew: \"addNew\",\n      value: \"value\",\n      placeholder: \"placeholder\"\n    },\n    features: [i0.ɵɵProvidersFeature([CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 7,\n    consts: [[\"floatPlaceholder\", \"always\", \"fxFlex\", \"\"], [\"chipList\", \"\"], [\"matPrefix\", \"\"], [3, \"remove\", \"keydown.ArrowRight\", 4, \"ngFor\", \"ngForOf\"], [3, \"matChipInputFor\", \"matChipInputAddOnBlur\", \"matAutocomplete\", \"placeholder\", \"keydown.enter\", \"input\"], [\"chipInput\", \"\"], [3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"remove\", \"keydown.ArrowRight\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n    template: function TagsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-chip-list\", null, 1);\n        i0.ɵɵelementStart(3, \"mat-icon\", 2);\n        i0.ɵɵtext(4, \"label_outline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, TagsComponent_mat_chip_5_Template, 4, 1, \"mat-chip\", 3);\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"keydown.enter\", function TagsComponent_Template_input_keydown_enter_6_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          var _r2 = i0.ɵɵreference(7);\n\n          return ctx.addTextChip(_r2);\n        })(\"input\", function TagsComponent_Template_input_input_6_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          var _r2 = i0.ɵɵreference(7);\n\n          return ctx.textChanged(_r2.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-autocomplete\", 6, 7);\n        i0.ɵɵlistener(\"optionSelected\", function TagsComponent_Template_mat_autocomplete_optionSelected_8_listener($event) {\n          return ctx.add($event);\n        });\n        i0.ɵɵtemplate(10, TagsComponent_mat_option_10_Template, 3, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(2);\n\n        var _r3 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n        i0.ɵɵproperty(\"matChipInputFor\", _r0)(\"matChipInputAddOnBlur\", false)(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredSources);\n      }\n    },\n    directives: [i1.MatFormField, i2.DefaultFlexDirective, i3.MatChipList, i4.MatIcon, i1.MatPrefix, i5.NgForOf, i3.MatChipInput, i6.MatAutocompleteTrigger, i6.MatAutocomplete, i3.MatChip, i3.MatChipRemove, i7.MatOption],\n    encapsulation: 2\n  });\n  return TagsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
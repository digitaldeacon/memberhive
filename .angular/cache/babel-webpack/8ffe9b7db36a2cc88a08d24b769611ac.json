{"ast":null,"code":"import _toConsumableArray from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { InteractionActionTypes } from './interaction.actions';\nimport { MessageType } from '../../common/common.model';\nvar initialState = {\n  interactions: [],\n  myInteractions: []\n};\nexport function interactionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case InteractionActionTypes.LIST_INTERACTIONS:\n    case InteractionActionTypes.ADD_INTERACTION:\n    case InteractionActionTypes.DELETE_INTERACTION:\n    case InteractionActionTypes.COMPLETE_INTERACTION:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case InteractionActionTypes.LIST_INTERACTIONS_SUCCESS:\n      {\n        var interact = action.payload;\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          interactions: interact\n        });\n      }\n\n    case InteractionActionTypes.ADD_INTERACTION_SUCCESS:\n      {\n        var interaction = action.payload;\n        var message = {\n          type: MessageType.SUCCESS,\n          text: 'Successfully added an interaction'\n        };\n        var newInteract = [].concat(_toConsumableArray(state.interactions), [interaction]);\n        newInteract.sort(function (i1, i2) {\n          var left = new Date(i1.createdAt);\n          var right = new Date(i2.createdAt);\n          var now = new Date();\n          left.setFullYear(now.getFullYear());\n          right.setFullYear(now.getFullYear());\n          return right.getTime() - left.getTime();\n        });\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          message: message,\n          interactions: newInteract\n        });\n      }\n\n    case InteractionActionTypes.UPDATE_INTERACTION_SUCCESS:\n      {\n        var _interaction = action.payload;\n        var _message = {\n          type: MessageType.SUCCESS,\n          text: 'Successfully updated this interaction'\n        };\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          message: _message,\n          interactions: state.interactions.map(function (i) {\n            return i.uid === _interaction.uid ? Object.assign({}, i, _interaction) : i;\n          })\n        });\n      }\n\n    case InteractionActionTypes.DELETE_INTERACTION_SUCCESS:\n      {\n        var _message2 = {\n          type: MessageType.SUCCESS,\n          text: 'Successfully deleted this interaction'\n        };\n        return Object.assign({}, state, {\n          loaded: true,\n          loading: false,\n          message: _message2,\n          interactions: state.interactions.filter(function (i) {\n            return i.id !== action.payload;\n          })\n        });\n      }\n\n    case InteractionActionTypes.LIST_INTERACTIONS_FAILURE:\n    case InteractionActionTypes.DELETE_INTERACTION_FAILURE:\n    case InteractionActionTypes.UPDATE_INTERACTION_FAILURE:\n    case InteractionActionTypes.ADD_INTERACTION_FAILURE:\n      {\n        var res = action.payload;\n        var _message3 = {\n          type: MessageType.FAILURE,\n          text: res.statusText\n        };\n        return Object.assign({}, state, {\n          loading: false,\n          loaded: false,\n          message: _message3\n        });\n      }\n\n    case InteractionActionTypes.GET_FOR_PERSON:\n      {\n        return Object.assign({}, state, {\n          forPersonId: action.payload\n        });\n      }\n\n    case InteractionActionTypes.CLEAR_INTERACTION_MESSAGE:\n      return Object.assign({}, state, {\n        message: undefined\n      });\n\n    default:\n      return state;\n  }\n}\nexport var loadedInteraction = function loadedInteraction(state) {\n  return state.loaded;\n};\nexport var loadingInteraction = function loadingInteraction(state) {\n  return state.loading;\n};\nexport var messageInteraction = function messageInteraction(state) {\n  return state.message;\n};\nexport var interactions = function interactions(state) {\n  return state.interactions;\n};\n\nvar selectedId = function selectedId(state) {\n  return state.forPersonId;\n};","map":null,"metadata":{},"sourceType":"module"}
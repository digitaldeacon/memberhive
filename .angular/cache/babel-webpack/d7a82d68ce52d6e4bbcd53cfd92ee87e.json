{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Applications/MAMP/htdocs/memberhive/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../modules/auth/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../modules/auth/auth.service\";\nexport var HttpService = /*#__PURE__*/(function () {\n  var HttpService = /*#__PURE__*/function () {\n    function HttpService(_http, _auth) {\n      _classCallCheck(this, HttpService);\n\n      this._http = _http;\n      this._auth = _auth;\n    }\n\n    _createClass(HttpService, [{\n      key: \"get\",\n      value: function get(url) {\n        return this.request(url, 'GET');\n      }\n    }, {\n      key: \"post\",\n      value: function post(url, body) {\n        return this.request(url, 'POST', body);\n      }\n    }, {\n      key: \"getRaw\",\n      value: function getRaw(url) {\n        return this._http.get(url);\n      }\n    }, {\n      key: \"unauthenticatedPost\",\n      value: function unauthenticatedPost(url, body) {\n        var headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n        var options = {\n          headers: headers,\n          withCredentials: false\n        };\n        return this._http.post('/api/' + url, body, options);\n      }\n    }, {\n      key: \"request\",\n      value: function request(url, method, body) {\n        var token = this._auth.token ? this._auth.token : '';\n        var h = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8').set('Authorization', \"Bearer \".concat(token)); // .set('Client', client );\n\n        var options = {\n          body: body,\n          headers: h,\n          withCredentials: true\n        };\n        return this._http.request(method, '/api/' + url, options);\n      }\n    }]);\n\n    return HttpService;\n  }();\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}